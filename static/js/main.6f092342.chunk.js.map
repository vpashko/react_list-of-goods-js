{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FORMAT_ALPHABETICALLY","SORT_FORMAT_BY_LENGTH","REVERSE","App","useState","sortFormat","setSortFormat","doReverse","setDoReverse","visibleGoods","groceries","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","HAS_ACTIVE_SORTING","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA6B,WAC7BC,EAAwB,eACxBC,EAAU,UAyBT,IAAMC,EAAM,WACjB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA1BR,SAA0BC,EAAWL,EAAYE,GAC/C,IAAMI,EAAa,YAAOD,GAmB1B,OAjBIL,GACFM,EAAcC,MACZ,SAACC,EAAOC,GACN,OAAQT,GACN,KAAKL,EACH,OAAOa,EAAME,cAAcD,GAE7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAMVT,EAAYI,EAAcM,UAAYN,EAMxBO,CAAiBnB,EAAiBM,EAAYE,GAC7DY,EAAqBd,GAA4B,KAAdE,EAEzC,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBE,IAAG,CAAE,WAAYjB,IAAeL,KAC7DuB,QAAS,kBAAMjB,EAAcN,IAH/B,iCAQA,wBACEqB,KAAK,SACLD,UAAS,4BAAuBE,IAAG,CAAE,WAAYjB,IAAeJ,KAChEsB,QAAS,kBAAMjB,EAAcL,IAH/B,4BAQA,wBACEoB,KAAK,SACLD,UAAS,4BAAuBE,IAAG,CAAE,WAAYf,IAAcL,KAC/DqB,QAAS,kBACLf,EAD0B,KAAdD,EACC,GACAL,IALnB,qBAUEiB,GAEE,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPjB,EAAc,IACdE,EAAa,KALjB,sBAYN,6BACGC,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAAoBA,aC7F9BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6f092342.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FORMAT_ALPHABETICALLY = 'alphabet';\nconst SORT_FORMAT_BY_LENGTH = 'sortByLength';\nconst REVERSE = 'reverse';\n\nfunction getPreparedGoods(groceries, sortFormat, doReverse) {\n  const preparedGoods = [...groceries];\n\n  if (sortFormat) {\n    preparedGoods.sort(\n      (good1, good2) => {\n        switch (sortFormat) {\n          case SORT_FORMAT_ALPHABETICALLY:\n            return good1.localeCompare(good2);\n\n          case SORT_FORMAT_BY_LENGTH:\n            return good1.length - good2.length;\n\n          default:\n            return 0;\n        }\n      },\n    );\n  }\n\n  return doReverse ? preparedGoods.reverse() : preparedGoods;\n}\n\nexport const App = () => {\n  const [sortFormat, setSortFormat] = useState('');\n  const [doReverse, setDoReverse] = useState('');\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortFormat, doReverse);\n  const HAS_ACTIVE_SORTING = sortFormat || doReverse !== '';\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${cn({ 'is-light': sortFormat !== SORT_FORMAT_ALPHABETICALLY })}`}\n          onClick={() => setSortFormat(SORT_FORMAT_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${cn({ 'is-light': sortFormat !== SORT_FORMAT_BY_LENGTH })}`}\n          onClick={() => setSortFormat(SORT_FORMAT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${cn({ 'is-light': doReverse !== REVERSE })}`}\n          onClick={() => (doReverse !== ''\n            ? setDoReverse('')\n            : setDoReverse(REVERSE))}\n        >\n          Reverse\n        </button>\n\n        {(HAS_ACTIVE_SORTING)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setSortFormat('');\n                setDoReverse('');\n              }}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}